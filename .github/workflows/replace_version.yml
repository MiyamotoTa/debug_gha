name: Replace version
on:
  push:
    branches:
      - release/**

jobs:
  replace-version-string:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: actions/checkout@v2
      - name: Extract version from release branch to env var
        env:
          FULL_BRANCH_NAME: ${{ github.ref }}
        run: |
          BRANCH_VERSION_PART="${FULL_BRANCH_NAME##*/}"
          echo "VERSION_BRANCH=$BRANCH_VERSION_PART" >> $GITHUB_ENV
      - name: Replace file
        run: |
          VERSION_BRANCH_STRIP_V="${VERSION_BRANCH:1}"
          sed -i -E "s/(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)/$VERSION_BRANCH_STRIP_V/" test_1/version.txt
      - name: Commit and push
        run: |
          git remote set-url origin https://github-actions:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          if (git diff --shortstat | grep '[0-9]'); then \
            git add .; \
            git commit -m "Replace version string"; \
            git push origin HEAD:${GITHUB_REF}; \
          fi

  create-pull-request:
    needs: replace-version-string
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.7

      - name: Setup vars
        id: vars
        run: |
          echo "::set-output name=branch_name::${GITHUB_REF#refs/heads/}"
          echo "::set-output name=branch_prefix::$(echo ${GITHUB_REF} | cut -d '/' -f 3)"
      - name: Create a release PR
        env:
          GIT_PR_RELEASE_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_PR_RELEASE_BRANCH_PRODUCTION: main
          GIT_PR_RELEASE_BRANCH_STAGING: ${{ steps.vars.outputs.branch_name }}
          GIT_PR_RELEASE_TITLE: ${{ steps.vars.outputs.branch_name }}
          GIT_PR_RELEASE_TEMPLATE: .git_pr_release_template
        run: |
          gem install -N git-pr-release -v "1.9.0"
          git-pr-release --no-fetch
